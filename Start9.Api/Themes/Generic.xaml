<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Start9.Api"
                    xmlns:plex="clr-namespace:Start9.Api.Plex"
                    xmlns:controls="clr-namespace:Start9.Api.Controls"
                    xmlns:obj="clr-namespace:Start9.Api.Objects">
    <!--ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Start9.Api;component/Themes/Plex.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Start9.Api;component/Themes/Colors/PlexBlue.xaml"/>
    </ResourceDictionary.MergedDictionaries-->
    
    <!-- Converters -->

    <obj:WidthToHalfWidthConverter x:Key="WidthToHalfWidthConverter"/>

    <!-- End Converters -->
    
    <!-- Window Styles -->

    <Style x:Key="PlexCaptionButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource CaptionButtonActiveIdleBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FontFamily" Value="Marlett"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="IsHitTestVisible" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource PlexFocusVisualStyle}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Width" Value="20"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect x:Name="DropShadow" Color="Black" Direction="320" ShadowDepth="3"
                                              BlurRadius="10" Opacity="0.5" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent" Margin="{TemplateBinding Padding}">
                        <ContentControl x:Name="Glyph" HorizontalAlignment="Center" VerticalAlignment="Center"
                               HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                               Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"
                               FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" IsTabStop="False"
                               Margin="0" Padding="0" UseLayoutRounding="True" SnapsToDevicePixels="True" />
                        <ContentControl x:Name="InactiveGlyph" HorizontalAlignment="Center" VerticalAlignment="Center"
                               HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                               Content="{TemplateBinding Content}" Foreground="{DynamicResource CaptionButtonInactiveIdleBrush}"
                               FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" IsTabStop="False"
                               Margin="0" Padding="0" UseLayoutRounding="True" SnapsToDevicePixels="True" Opacity="0" />
                        <ContentControl x:Name="HoverGlyph" HorizontalAlignment="Center" VerticalAlignment="Center"
                               HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                               Content="{TemplateBinding Content}" Foreground="{DynamicResource CaptionButtonActiveHoverBrush}"
                               FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" IsTabStop="False"
                               Margin="0" Padding="0" UseLayoutRounding="True" SnapsToDevicePixels="True" Opacity="0" />
                        <ContentControl x:Name="PressedGlyph" HorizontalAlignment="Center" VerticalAlignment="Center"
                               HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                               Content="{TemplateBinding Content}" Foreground="{DynamicResource CaptionButtonActivePressedBrush}"
                               FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" IsTabStop="False"
                               Margin="0" Padding="0" UseLayoutRounding="True" SnapsToDevicePixels="True" Opacity="0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type plex:PlexWindow}}}" Value="False">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="InactiveGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="InactiveGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlexWindowStyle" TargetType="{x:Type plex:PlexWindow}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="ResizeMode" Value="CanResize" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BodyBrush" Value="{DynamicResource DefaultWindowBodyBrush}"/>
        <Setter Property="FooterBrush" Value="{DynamicResource DefaultWindowFooterBrush}"/>
        <Setter Property="FontFamily" Value="Liberation Sans"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type plex:PlexWindow}">
                    <Grid Margin="{TemplateBinding Margin}">
                        <Grid x:Name="WindowRoot" Margin="0">
                            <DockPanel Margin="{TemplateBinding Padding}" LastChildFill="True" Background="Transparent">
                                <Grid x:Name="PART_Titlebar" HorizontalAlignment="Stretch" Margin="0"
                                  Height="{TemplateBinding TitleBarHeight}" Visibility="Visible" Opacity="1"
                                  DockPanel.Dock="Top">
                                    <Grid x:Name="ActiveTitlebarBackground" Visibility="Visible">
                                        <Border x:Name="ActiveTitlebarBorder" CornerRadius="12,12,0,0"
                                            BorderThickness="0,1,0,0"
                                            Background="{DynamicResource ActiveTitlebarBackgroundBrush}"
                                            BorderBrush="{DynamicResource ActiveTitlebarBorderBrush}"
                                            Margin="0,0,0,-12" Padding="0" />
                                        <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="1"
                                            Margin="12,2,12,0" Background="{DynamicResource ActiveTitlebarBorderBrush}" />
                                    </Grid>
                                    <Grid x:Name="InactiveTitlebarBackground" Visibility="Hidden">
                                        <Border x:Name="InactiveTitlebarBorder" CornerRadius="12,12,0,0"
                                            BorderThickness="0,1,0,0"
                                            Background="{DynamicResource InactiveTitlebarBackgroundBrush}"
                                            BorderBrush="{DynamicResource InactiveTitlebarBorderBrush}"
                                            Margin="0,0,0,-12" Padding="0" />
                                        <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="1"
                                            Margin="12,2,12,0"
                                            Background="{DynamicResource InactiveTitlebarBorderBrush}" />
                                    </Grid>
                                    <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="16"
                                        Margin="3">
                                        <Canvas.Background>
                                            <ImageBrush ImageSource="{TemplateBinding Icon}" />
                                        </Canvas.Background>
                                    </Canvas>
                                    <Label x:Name="TitleText" Content="{TemplateBinding Title}" HorizontalAlignment="Stretch"
                                       VerticalAlignment="Top" HorizontalContentAlignment="Center"
                                       VerticalContentAlignment="Center" Height="26" Margin="0,-2" FontSize="12" Foreground="White">
                                        <Label.Effect>
                                            <DropShadowEffect x:Name="DropShadow" Color="Black" Direction="320"
                                                          ShadowDepth="3" BlurRadius="10" Opacity="0.5" />
                                        </Label.Effect>
                                    </Label>
                                    <ContentPresenter Content="{TemplateBinding TitleBarContent}" />
                                    <StackPanel x:Name="CaptionButtons" HorizontalAlignment="Right" VerticalAlignment="Top"
                                            Orientation="Horizontal" Height="22"><!--RenderTransformOrigin="1,0">
                                        <StackPanel.RenderTransform>
                                            <ScaleTransform ScaleX="2" ScaleY="2"/>
                                        </StackPanel.RenderTransform-->
                                        <!--Width="18" VerticalAlignment="Stretch" -->
                                        <Button x:Name="PART_MinimizeButton">
                                            <Button.Style>
                                                <Style TargetType="Button" BasedOn="{StaticResource PlexCaptionButtonStyle}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="Button">
                                                                <Grid Background="#01000000" IsHitTestVisible="True">
                                                                    <!--ContentControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#01000000"
                               Content="{x:Null}" Foreground="Transparent"
                               FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" IsTabStop="False"
                               Margin="0" Padding="0" UseLayoutRounding="True" SnapsToDevicePixels="True"/-->
                                                                    <Border x:Name="Glyph" Width="6" Height="9" Background="Transparent" BorderThickness="0,0,0,2" BorderBrush="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                    <!--Border x:Name="Glyph" HorizontalAlignment="Center" VerticalAlignment="Center" BorderBrush="" Margin="0" Padding="0" UseLayoutRounding="True" SnapsToDevicePixels="True" /-->
                                                                    <Border x:Name="InactiveGlyph" Width="6" Height="9" Background="Transparent" BorderThickness="0,0,0,2" BorderBrush="{DynamicResource CaptionButtonInactiveIdleBrush}" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                    <!--ContentControl x:Name="InactiveGlyph" HorizontalAlignment="Center" VerticalAlignment="Center"
                               HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                               Content="{TemplateBinding Content}" Foreground="{DynamicResource CaptionButtonInactiveIdleBrush}"
                               FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" IsTabStop="False"
                               Margin="0" Padding="0" UseLayoutRounding="True" SnapsToDevicePixels="True" Opacity="0" /-->
                                                                    <Border x:Name="HoverGlyph" Width="6" Height="9" Background="Transparent" BorderThickness="0,0,0,2" BorderBrush="{DynamicResource CaptionButtonActiveHoverBrush}" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                    <!--ContentControl x:Name="HoverGlyph" HorizontalAlignment="Center" VerticalAlignment="Center"
                               HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                               Content="{TemplateBinding Content}" Foreground="{DynamicResource CaptionButtonActiveHoverBrush}"
                               FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" IsTabStop="False"
                               Margin="0" Padding="0" UseLayoutRounding="True" SnapsToDevicePixels="True" Opacity="0" /-->
                                                                    <Border x:Name="PressedGlyph" Width="6" Height="9" Background="Transparent" BorderThickness="0,0,0,2" BorderBrush="{DynamicResource CaptionButtonActivePressedBrush}" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                    <!--ContentControl x:Name="PressedGlyph" HorizontalAlignment="Center" VerticalAlignment="Center"
                               HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                               Content="{TemplateBinding Content}" Foreground="{DynamicResource CaptionButtonActivePressedBrush}"
                               FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" IsTabStop="False"
                               Margin="0" Padding="0" UseLayoutRounding="True" SnapsToDevicePixels="True" Opacity="0" /-->
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type plex:PlexWindow}}}" Value="False">
                                                                        <DataTrigger.EnterActions>
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Storyboard.TargetName="InactiveGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </DataTrigger.EnterActions>
                                                                        <DataTrigger.ExitActions>
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Storyboard.TargetName="InactiveGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </DataTrigger.ExitActions>
                                                                    </DataTrigger>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Trigger.EnterActions>
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Storyboard.TargetName="HoverGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </Trigger.EnterActions>
                                                                        <Trigger.ExitActions>
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Storyboard.TargetName="HoverGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </Trigger.ExitActions>
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Trigger.EnterActions>
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Storyboard.TargetName="PressedGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </Trigger.EnterActions>
                                                                        <Trigger.ExitActions>
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Storyboard.TargetName="PressedGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </Trigger.ExitActions>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                        <!--Border Width="6" Height="9" Background="Transparent" BorderThickness="0,0,0,2" BorderBrush="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentControl}}"/-->
                                            <!--0-->
                                        <Grid x:Name="MaxRestButtonGrid"><!--Margin="-1,0,1,0"-->
                                            <Button x:Name="PART_MaximizeButton">
                                                <Button.Style>
                                                    <Style TargetType="Button" BasedOn="{StaticResource PlexCaptionButtonStyle}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="Button">
                                                                    <Grid Background="#01000000" IsHitTestVisible="True" Margin="0.25,1,-0.25,-1">
                                                                        <!--ContentControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#01000000"
                               Content="{x:Null}" Foreground="Transparent"
                               FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" IsTabStop="False"
                               Margin="0" Padding="0" UseLayoutRounding="True" SnapsToDevicePixels="True"/-->
                                                                        <Border x:Name="Glyph" Width="10" Height="9" BorderThickness="1,2,1,1" Background="Transparent" BorderBrush="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                        <!--Border x:Name="Glyph" HorizontalAlignment="Center" VerticalAlignment="Center" BorderBrush="" Margin="0" Padding="0" UseLayoutRounding="True" SnapsToDevicePixels="True" /-->
                                                                        <Border x:Name="InactiveGlyph" Width="10" Height="9" BorderThickness="1,2,1,1" Background="Transparent" BorderBrush="{DynamicResource CaptionButtonInactiveIdleBrush}" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                        <!--ContentControl x:Name="InactiveGlyph" HorizontalAlignment="Center" VerticalAlignment="Center"
                               HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                               Content="{TemplateBinding Content}" Foreground="{DynamicResource CaptionButtonInactiveIdleBrush}"
                               FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" IsTabStop="False"
                               Margin="0" Padding="0" UseLayoutRounding="True" SnapsToDevicePixels="True" Opacity="0" /-->
                                                                        <Border x:Name="HoverGlyph" Width="10" Height="9" BorderThickness="1,2,1,1" Background="Transparent" BorderBrush="{DynamicResource CaptionButtonActiveHoverBrush}" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                        <!--ContentControl x:Name="HoverGlyph" HorizontalAlignment="Center" VerticalAlignment="Center"
                               HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                               Content="{TemplateBinding Content}" Foreground="{DynamicResource CaptionButtonActiveHoverBrush}"
                               FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" IsTabStop="False"
                               Margin="0" Padding="0" UseLayoutRounding="True" SnapsToDevicePixels="True" Opacity="0" /-->
                                                                        <Border x:Name="PressedGlyph" Width="10" Height="9" BorderThickness="1,2,1,1" Background="Transparent" BorderBrush="{DynamicResource CaptionButtonActivePressedBrush}" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                        <!--ContentControl x:Name="PressedGlyph" HorizontalAlignment="Center" VerticalAlignment="Center"
                               HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                               Content="{TemplateBinding Content}" Foreground="{DynamicResource CaptionButtonActivePressedBrush}"
                               FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" IsTabStop="False"
                               Margin="0" Padding="0" UseLayoutRounding="True" SnapsToDevicePixels="True" Opacity="0" /-->
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type plex:PlexWindow}}}" Value="False">
                                                                            <DataTrigger.EnterActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Storyboard.TargetName="InactiveGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </DataTrigger.EnterActions>
                                                                            <DataTrigger.ExitActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Storyboard.TargetName="InactiveGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </DataTrigger.ExitActions>
                                                                        </DataTrigger>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Trigger.EnterActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Storyboard.TargetName="HoverGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </Trigger.EnterActions>
                                                                            <Trigger.ExitActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Storyboard.TargetName="HoverGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </Trigger.ExitActions>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Trigger.EnterActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Storyboard.TargetName="PressedGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </Trigger.EnterActions>
                                                                            <Trigger.ExitActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Storyboard.TargetName="PressedGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </Trigger.ExitActions>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <!--Border Width="10" Height="9" BorderThickness="1,2,1,1" BorderBrush="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"/-->
                                            <!--1-->
                                            <Button x:Name="PART_RestoreButton" Visibility="Hidden">
                                                <Button.Style>
                                                    <Style TargetType="Button" BasedOn="{StaticResource PlexCaptionButtonStyle}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="Button">
                                                                    <Grid Background="#01000000" IsHitTestVisible="True" Margin="0.25,1,-0.25,-1">
                                                                        <Grid x:Name="Glyph" Width="9" Height="9" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                            <Border HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="7" Height="6" Background="Transparent" BorderThickness="1,2,1,1" BorderBrush="{TemplateBinding Foreground}"/>
                                                                            <Border HorizontalAlignment="Right" VerticalAlignment="Top" Width="7" Height="6" Background="Transparent" BorderThickness="0,2,1,0" BorderBrush="{TemplateBinding Foreground}"/>
                                                                        </Grid>
                                                                        <Grid x:Name="InactiveGlyph" Width="9" Height="9" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                            <Border HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="7" Height="6" Background="Transparent" BorderThickness="1,2,1,1" BorderBrush="{DynamicResource CaptionButtonInactiveIdleBrush}"/>
                                                                            <Border HorizontalAlignment="Right" VerticalAlignment="Top" Width="7" Height="6" Background="Transparent" BorderThickness="0,2,1,0" BorderBrush="{DynamicResource CaptionButtonInactiveIdleBrush}"/>
                                                                        </Grid>
                                                                        <Grid x:Name="HoverGlyph" Width="9" Height="9" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                            <Border HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="7" Height="6" Background="Transparent" BorderThickness="1,2,1,1" BorderBrush="{DynamicResource CaptionButtonActiveHoverBrush}"/>
                                                                            <Border HorizontalAlignment="Right" VerticalAlignment="Top" Width="7" Height="6" Background="Transparent" BorderThickness="0,2,1,0" BorderBrush="{DynamicResource CaptionButtonActiveHoverBrush}"/>
                                                                        </Grid>
                                                                        <Grid x:Name="PressedGlyph" Width="9" Height="9" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                            <Border HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="7" Height="6" Background="Transparent" BorderThickness="1,2,1,1" BorderBrush="{DynamicResource CaptionButtonActivePressedBrush}"/>
                                                                            <Border HorizontalAlignment="Right" VerticalAlignment="Top" Width="7" Height="6" Background="Transparent" BorderThickness="0,2,1,0" BorderBrush="{DynamicResource CaptionButtonActivePressedBrush}"/>
                                                                        </Grid>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type plex:PlexWindow}}}" Value="False">
                                                                            <DataTrigger.EnterActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Storyboard.TargetName="InactiveGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </DataTrigger.EnterActions>
                                                                            <DataTrigger.ExitActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Storyboard.TargetName="InactiveGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </DataTrigger.ExitActions>
                                                                        </DataTrigger>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Trigger.EnterActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Storyboard.TargetName="HoverGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </Trigger.EnterActions>
                                                                            <Trigger.ExitActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Storyboard.TargetName="HoverGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </Trigger.ExitActions>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Trigger.EnterActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Storyboard.TargetName="PressedGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </Trigger.EnterActions>
                                                                            <Trigger.ExitActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Storyboard.TargetName="PressedGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </Trigger.ExitActions>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Button.Style>
                                                <Grid Width="9" Height="9">
                                                    <Border HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="7" Height="6" Background="Transparent" BorderThickness="1,2,1,1" BorderBrush="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"/>
                                                    <Border HorizontalAlignment="Right" VerticalAlignment="Top" Width="7" Height="6" Background="Transparent" BorderThickness="0,2,1,0" BorderBrush="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"/>
                                            </Grid>
                                                <!--2-->
                                            </Button>
                                        </Grid>
                                        <Button x:Name="PART_CloseButton" Padding="-3.25,0.625,3.25,-0.625">
                                            <Button.Style>
                                                <Style TargetType="Button" BasedOn="{StaticResource PlexCaptionButtonStyle}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="Button">
                                                                <ControlTemplate.Resources>
                                                                    <!--PathGeometry x:Key="CloseIconPathGeometry" Figures="M 0 0 L 1 0 L 4 3 L 7 0 L 8 0 L 8 1 L 5 4 L 8 7 L 8 8 L 7 8 L 4 5 L 1 8 L 0 8 L 0 7 L 3 4 L 0 1 Z"/-->
                                                                    <!--PathGeometry x:Key="CloseIconPathGeometry" Figures="M 0 0 L 2 0 L 4 2 L 6 0 L 8 0 L 8 2 L 6 4 L 8 6 L 8 8 L 6 8 L 4 6 L 2 8 L 0 8 L 0 6 L 2 4 L 0 2 Z"/-->
                                                                    <!--PathGeometry x:Key="CloseIconPathGeometry" Figures="M 0 0 L 1.5 0 L 4 2.5 L 6.5 0 L 8 0 L 8 1.5 L 5.5 4 L 8 6.5 L 8 8 L 6.5 8 L 4 5.5 L 1.5 8 L 0 8 L 0 6.5 L 2.5 4 L 0 1.5 Z"/-->
                                                                    <PathGeometry x:Key="CloseIconPathGeometry" Figures="M 0 0 L 1.5 0 L 4.5 3 L 7.5 0 L 9 0 L 9 1.5 L 6 4.5 L 9 7.5 L 9 9 L 7.5 9 L 4.5 6 L 1.5 9 L 0 9 L 0 7.5 L 3 4.5 L 0 1.5 Z"/>
                                                                </ControlTemplate.Resources>
                                                                <Border Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Margin="{TemplateBinding Padding}">
                                                                    <Grid Background="#01000000" IsHitTestVisible="True" Margin="0,0.5,0,-0.5">
                                                                        <Path x:Name="Glyph" Fill="{TemplateBinding Foreground}" Data="{DynamicResource CloseIconPathGeometry}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                        <Path x:Name="InactiveGlyph" Fill="{DynamicResource CaptionButtonInactiveIdleBrush}" Data="{DynamicResource CloseIconPathGeometry}" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0"/>
                                                                        <Path x:Name="HoverGlyph" Fill="{DynamicResource CaptionButtonActiveHoverBrush}" Data="{DynamicResource CloseIconPathGeometry}" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0"/>
                                                                        <Path x:Name="PressedGlyph" Fill="{DynamicResource CaptionButtonActivePressedBrush}" Data="{DynamicResource CloseIconPathGeometry}" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0"/>
                                                                    </Grid>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type plex:PlexWindow}}}" Value="False">
                                                                        <DataTrigger.EnterActions>
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Storyboard.TargetName="InactiveGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </DataTrigger.EnterActions>
                                                                        <DataTrigger.ExitActions>
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Storyboard.TargetName="InactiveGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </DataTrigger.ExitActions>
                                                                    </DataTrigger>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Trigger.EnterActions>
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Storyboard.TargetName="HoverGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </Trigger.EnterActions>
                                                                        <Trigger.ExitActions>
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Storyboard.TargetName="HoverGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </Trigger.ExitActions>
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Trigger.EnterActions>
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Storyboard.TargetName="PressedGlyph" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </Trigger.EnterActions>
                                                                        <Trigger.ExitActions>
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Storyboard.TargetName="PressedGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </Trigger.ExitActions>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </StackPanel>
                                    <Border x:Name="DialogFilm" CornerRadius="12,12,0,0" IsHitTestVisible="False" Background="#C0000000" Visibility="Hidden" Margin="0,0,0,-12"/>
                                </Grid>
                                <Grid x:Name="ToolBar" HorizontalAlignment="Stretch" Margin="0"
                                  Height="{TemplateBinding ToolBarHeight}" Visibility="Visible" DockPanel.Dock="Top">
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
                                        <Grid Margin="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                            <Border x:Name="ToolBarBorder" CornerRadius="8,8,0,0" BorderThickness="1,1,1,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource WindowToolbarBackgroundBrush}" BorderBrush="{DynamicResource WindowToolbarBorderBrush}">
                                                <Border x:Name="ToolBarSecondaryBorder" CornerRadius="8,8,0,0"
                                                    BorderThickness="0,1,0,0" Background="{DynamicResource WindowToolbarSecondaryBackgroundBrush}"
                                                    BorderBrush="{DynamicResource WindowToolbarSecondaryBorderBrush}" />
                                            </Border>
                                            <Canvas Height="1" VerticalAlignment="Bottom" Margin="0" Background="{DynamicResource WindowToolbarBackgroundBrush}"/>
                                            <Canvas Height="1" VerticalAlignment="Bottom" Margin="1" Background="{DynamicResource WindowToolbarTertiaryBackgroundBrush}"/>
                                            <Canvas Height="1" VerticalAlignment="Bottom" Margin="2" Background="{DynamicResource WindowToolbarQuarternaryBackgroundBrush}"/>
                                        </Grid>
                                        <ContentPresenter Content="{TemplateBinding ToolBarContent}" />
                                    </Grid>
                                </Grid>
                                <Grid x:Name="Footer" HorizontalAlignment="Stretch" Margin="0"
                                  Height="{TemplateBinding FooterHeight}" Visibility="Visible" DockPanel.Dock="Bottom">
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,-12,0,0">
                                        <Border x:Name="FooterBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{TemplateBinding FooterBrush}" CornerRadius="0,0,12,12" />
                                        <ContentPresenter Content="{TemplateBinding FooterContent}" />
                                    </Grid>
                                </Grid>
                                <Border x:Name="BodyBase" CornerRadius="12" BorderBrush="{DynamicResource WindowToolbarBackgroundBrush}" BorderThickness="0,1,0,0" HorizontalAlignment="Stretch" Margin="0" Padding="0">
                                    <Border x:Name="Body" CornerRadius="12" BorderBrush="Transparent" BorderThickness="0" HorizontalAlignment="Stretch" Margin="0" Padding="0" Background="{TemplateBinding BodyBrush}">
                                        <ContentPresenter Content="{TemplateBinding Content}" />
                                    </Border>
                                </Border>
                            </DockPanel>
                            <Grid x:Name="FullWindowContentGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Visible" Margin="{TemplateBinding Padding}">
                                <ContentPresenter Content="{TemplateBinding FullWindowContent}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Visible"/>
                            </Grid>
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Thumb x:Name="PART_ThumbBottom" HorizontalAlignment="Stretch" Cursor="SizeNS"
                                   Grid.Column="0" Background="{x:Null}" Margin="3,0" Grid.ColumnSpan="3" Grid.Row="3"
                                   Style="{DynamicResource BorderThumb}" />
                                <Thumb x:Name="PART_ThumbTop" HorizontalAlignment="Stretch" Cursor="SizeNS" Grid.Column="0"
                                   Background="{x:Null}" Margin="3,0" Grid.ColumnSpan="3" Height="4"
                                   Style="{DynamicResource BorderThumb}" />
                                <Thumb x:Name="PART_ThumbRight" Cursor="SizeWE" Grid.Column="2" Grid.RowSpan="4"
                                   Background="{x:Null}" Margin="0,3" Style="{DynamicResource BorderThumb}" />
                                <Thumb x:Name="PART_ThumbLeft" Cursor="SizeWE" Grid.Column="0" Grid.RowSpan="4"
                                   HorizontalContentAlignment="Right" Background="{x:Null}" Margin="0,3"
                                   Style="{DynamicResource BorderThumb}" />
                                <Thumb x:Name="PART_ThumbBottomRightCorner" HorizontalAlignment="Right" Cursor="SizeNWSE"
                                   Grid.Row="3" Grid.Column="3" Background="{x:Null}"
                                   Style="{DynamicResource BorderThumb}" />
                                <Thumb x:Name="PART_ThumbTopRightCorner" HorizontalAlignment="Right" Cursor="SizeNESW"
                                   Grid.Row="0" Grid.Column="2" Background="{x:Null}"
                                   Style="{DynamicResource BorderThumb}" />
                                <Thumb x:Name="PART_ThumbTopLeftCorner" HorizontalAlignment="Left" Cursor="SizeNWSE"
                                   Grid.Row="0" Grid.Column="0" Background="{x:Null}"
                                   Style="{DynamicResource BorderThumb}" />
                                <Thumb x:Name="PART_ThumbBottomLeftCorner" HorizontalAlignment="Left" Cursor="SizeNESW"
                                   Grid.Row="3" Grid.Column="0" Background="{x:Null}"
                                   Style="{DynamicResource BorderThumb}" />
                            </Grid>
                            <Thumb x:Name="PART_ResizeGrip" Style="{DynamicResource ResizeGripThumb}" Visibility="Hidden"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowTitle" Value="False">
                            <Setter TargetName="TitleText" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Manual"/>
                                <Condition Property="ShowCloseButton" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="PART_CloseButton" Property="Width" Value="0"/>
                                <Setter TargetName="PART_CloseButton" Property="Height" Value="0"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Manual"/>
                                <Condition Property="ShowMaxRestButton" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="MaxRestButtonGrid" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="MaxRestButtonGrid" Property="Width" Value="0"/>
                                <Setter TargetName="MaxRestButtonGrid" Property="Height" Value="0"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Manual"/>
                                <Condition Property="ShowMinButton" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="PART_MinimizeButton" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="PART_MinimizeButton" Property="Width" Value="0"/>
                                <Setter TargetName="PART_MinimizeButton" Property="Height" Value="0"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Manual"/>
                                <Condition Property="ShowResizeEdges" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="PART_ThumbBottom" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="PART_ThumbTop" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="PART_ThumbBottomRightCorner" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="PART_ThumbTopRightCorner" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="PART_ThumbTopLeftCorner" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="PART_ThumbBottomLeftCorner" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="PART_ThumbRight" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="PART_ThumbLeft" Property="Visibility" Value="Hidden" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Manual"/>
                                <Condition Property="ShowResizeGrip" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="PART_ResizeGrip" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsActive" Value="True">
                            <Setter TargetName="ActiveTitlebarBackground" Property="Visibility" Value="Visible" />
                            <Setter TargetName="InactiveTitlebarBackground" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="ActiveTitlebarBackground" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="InactiveTitlebarBackground" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_MinimizeButton" Property="Foreground" Value="{DynamicResource CaptionButtonInactiveIdleBrush}" />
                            <Setter TargetName="PART_MaximizeButton" Property="Foreground" Value="{DynamicResource CaptionButtonInactiveIdleBrush}" />
                            <Setter TargetName="PART_RestoreButton" Property="Foreground" Value="{DynamicResource CaptionButtonInactiveIdleBrush}" />
                            <Setter TargetName="PART_CloseButton" Property="Foreground" Value="{DynamicResource CaptionButtonInactiveIdleBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowToolBar" Value="True" />
                                <Condition Property="ShowFooter" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Body" Property="CornerRadius" Value="0" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowTitleBar" Value="True" />
                                <Condition Property="ShowToolBar" Value="False" />
                                <Condition Property="ShowFooter" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Body" Property="CornerRadius" Value="12,12,0,0" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowTitleBar" Value="False" />
                                <Condition Property="ShowToolBar" Value="False" />
                                <Condition Property="ShowFooter" Value="True" />
                                <Condition Property="Maximized" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Body" Property="CornerRadius" Value="12,12,0,0" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowTitleBar" Value="False" />
                                <Condition Property="ShowToolBar" Value="False" />
                                <Condition Property="ShowFooter" Value="True" />
                                <Condition Property="Maximized" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Body" Property="CornerRadius" Value="0" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowToolBar" Value="True" />
                                <Condition Property="ShowFooter" Value="False" />
                                <Condition Property="Maximized" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Body" Property="CornerRadius" Value="0,0,12,12" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowToolBar" Value="True" />
                                <Condition Property="ShowFooter" Value="False" />
                                <Condition Property="Maximized" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Body" Property="CornerRadius" Value="0" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowTitleBar" Value="True" />
                                <Condition Property="ShowToolBar" Value="False" />
                                <Condition Property="ShowFooter" Value="False" />
                                <Condition Property="Maximized" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Body" Property="CornerRadius" Value="12,12,12,12" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowTitleBar" Value="True" />
                                <Condition Property="ShowToolBar" Value="False" />
                                <Condition Property="ShowFooter" Value="False" />
                                <Condition Property="Maximized" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Body" Property="CornerRadius" Value="12,12,0,0" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowTitleBar" Value="False" />
                                <Condition Property="ShowToolBar" Value="False" />
                                <Condition Property="ShowFooter" Value="False" />
                                <Condition Property="Maximized" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Body" Property="CornerRadius" Value="12,12,12,12" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowTitleBar" Value="False" />
                                <Condition Property="ShowToolBar" Value="False" />
                                <Condition Property="ShowFooter" Value="False" />
                                <Condition Property="Maximized" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Body" Property="CornerRadius" Value="0" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowTitleBar" Value="False" />
                                <Condition Property="ShowToolBar" Value="True" />
                                <Condition Property="Maximized" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ToolBarBorder" Property="CornerRadius" Value="0" />
                                <Setter TargetName="ToolBarSecondaryBorder" Property="CornerRadius" Value="0" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="ShowTitleBar" Value="False">
                            <Setter Property="TitleBarHeight" Value="0" />
                            <Setter TargetName="PART_Titlebar" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="ShowToolBar" Value="False">
                            <Setter Property="ToolBarHeight" Value="0" />
                            <Setter TargetName="ToolBar" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="ShowToolBar" Value="True">
                            <Setter TargetName="BodyBase" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="BodyBase" Property="BorderThickness" Value="0"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowToolBar" Value="False" />
                                <Condition Property="IsActive" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="BodyBase" Property="BorderBrush" Value="{DynamicResource InactiveTitlebarBorderBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="ShowFooter" Value="False">
                            <Setter Property="FooterHeight" Value="0" />
                            <Setter TargetName="Footer" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="Maximized" Value="True">
                            <Setter TargetName="PART_MaximizeButton" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_RestoreButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="FooterBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="ActiveTitlebarBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="InactiveTitlebarBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="PART_ThumbBottom" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbTop" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbBottomRightCorner" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbTopRightCorner" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbTopLeftCorner" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbBottomLeftCorner" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbRight" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbLeft" Property="Visibility" Value="Hidden" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="WindowRoot" Storyboard.TargetProperty="Margin" BeginTime="0:0:0.0" Duration="0:0:0.0" From="0" To="3, 3, -3, -3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="WindowRoot" Storyboard.TargetProperty="Margin" BeginTime="0:0:0.0" Duration="0:0:0.375" From="3, 3, -3, -3" To="107, 107, 93, 93">
                                            <ThicknessAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="WindowRoot" Storyboard.TargetProperty="Margin" BeginTime="0:0:0.376" Duration="0">
                                            <DiscreteThicknessKeyFrame Value="0" KeyTime="0:0:0.0"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanMinimize">
                            <Setter TargetName="MaxRestButtonGrid" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="MaxRestButtonGrid" Property="Width" Value="0"/>
                            <Setter TargetName="PART_ThumbBottom" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbTop" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbBottomRightCorner" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbTopRightCorner" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbTopLeftCorner" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbBottomLeftCorner" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbRight" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbLeft" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter TargetName="MaxRestButtonGrid" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="MaxRestButtonGrid" Property="Width" Value="0"/>
                            <Setter TargetName="PART_MinimizeButton" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="PART_MinimizeButton" Property="Width" Value="0"/>
                            <Setter TargetName="PART_ThumbBottom" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbTop" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbBottomRightCorner" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbTopRightCorner" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbTopLeftCorner" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbBottomLeftCorner" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbRight" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbLeft" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                            <Setter TargetName="PART_ResizeGrip" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="DisplayDialogFilm" Value="True">
                            <Setter TargetName="DialogFilm" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsActive" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="ShadowOpacity" To="1" Duration="0:0:0.25" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="ShadowOpacity" To="0.5" Duration="0:0:0.25" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type plex:PlexWindow}"/>

    <!-- End Window Styles -->
</ResourceDictionary>