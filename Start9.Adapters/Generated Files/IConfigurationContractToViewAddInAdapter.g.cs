//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Start9.Api.AddInSideAdapters
{
    
    public class IConfigurationContractToViewAddInAdapter : Start9.Api.IConfiguration
    {
        private Start9.Api.Contracts.IConfigurationContract _contract;
        private System.AddIn.Pipeline.ContractHandle _handle;
        private Start9.Api.AddInSideAdapters.IConfigurationChangedEventHandlerViewToContractAddInAdapter ConfigurationChanged_Handler;
        private static System.Reflection.MethodInfo s_ConfigurationChangedEventAddFire;
		public event System.EventHandler<Start9.Api.AConfigurationChangedEventArgs> ConfigurationChanged{
			add{
				if (_ConfigurationChanged == null)
				{
					_contract.ConfigurationChangedEventAdd(ConfigurationChanged_Handler);
				}
				_ConfigurationChanged += value;
				}
			remove{
					_ConfigurationChanged -= value;
				if (_ConfigurationChanged == null)
				{
					_contract.ConfigurationChangedEventRemove(ConfigurationChanged_Handler);
				}
				}
		}
        static IConfigurationContractToViewAddInAdapter()
        {
            s_ConfigurationChangedEventAddFire = typeof(IConfigurationContractToViewAddInAdapter).GetMethod("Fire_ConfigurationChanged", ((System.Reflection.BindingFlags)(36)));
        }
        public IConfigurationContractToViewAddInAdapter(Start9.Api.Contracts.IConfigurationContract contract)
        {
            _contract = contract;
            _handle = new System.AddIn.Pipeline.ContractHandle(contract);
            ConfigurationChanged_Handler = new Start9.Api.AddInSideAdapters.IConfigurationChangedEventHandlerViewToContractAddInAdapter(this, s_ConfigurationChangedEventAddFire);
        }
        private event System.EventHandler<Start9.Api.AConfigurationChangedEventArgs> _ConfigurationChanged;
        internal virtual void Fire_ConfigurationChanged(Start9.Api.AConfigurationChangedEventArgs args)
        {
            if ((_ConfigurationChanged == null))
            {
            }
            else
            {
                _ConfigurationChanged.Invoke(this, args);
            }
        }
        internal Start9.Api.Contracts.IConfigurationContract GetSourceContract()
        {
            return _contract;
        }
    }
}

